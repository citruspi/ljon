#!/usr/bin/env/python
import json
import os
from threading import Thread

import click
import yaml

import ljon.build
import ljon.server
import ljon.watch
import ljon.context


@click.command()
@click.option('--root', default='.', help='Path to the the project')
@click.option('--server', is_flag=True,
              help='Run an HTTP server for the project')
@click.option('--host', default='0.0.0.0',
              help='The host for the HTTP server')
@click.option('--port', default=5657,
              help='The port for the HTTP server')
@click.option('--watch', is_flag=True, help='Watch file system for changes')
def build(root, server, host, port, watch):
    try:
        config_path = os.path.join(root, '.ljon/config.json')

        with open(config_path, 'r') as f:
            config = json.load(f)
    except FileNotFoundError:
        try:
            config_path = os.path.join(root, '.ljon/config.yaml')

            with open(config_path, 'r') as f:
                config = yaml.load(f)
        except FileNotFoundError:
            raise Exception('No configuration file found')

    ctx = ljon.context.Context(root=root,
                  public_path=os.path.join(root, 'public'),
                  templates_path=os.path.join(root, '.ljon/templates'),
                  config=config)

    ljon.build(ctx)

    if watch:
        watch_thread = WatchThread(ctx)
        watch_thread.start()

    if server:
        server = ljon.server.Server(host, port, ctx)
        server.start()


class WatchThread(Thread):
    def __init__(self,ctx):
        self.stopped = False
        self.ctx = ctx

        Thread.__init__(self)

    def run(self):
        while not self.stopped:
            ljon.watch.watch(self.ctx)


if __name__ == '__main__':
    build()
